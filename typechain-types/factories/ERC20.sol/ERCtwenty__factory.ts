/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERCtwenty, ERCtwentyInterface } from "../../ERC20.sol/ERCtwenty";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017a5380380620017a5833981810160405281019062000037919062000361565b816001908162000048919062000631565b5080600290816200005a919062000631565b50620000763368056bc75e2d631000006200007e60201b60201c565b505062000833565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e79062000779565b60405180910390fd5b80600080828254620001039190620007ca565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200015b9190620007ca565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001c2919062000816565b60405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023782620001ec565b810181811067ffffffffffffffff82111715620002595762000258620001fd565b5b80604052505050565b60006200026e620001ce565b90506200027c82826200022c565b919050565b600067ffffffffffffffff8211156200029f576200029e620001fd565b5b620002aa82620001ec565b9050602081019050919050565b60005b83811015620002d7578082015181840152602081019050620002ba565b60008484015250505050565b6000620002fa620002f48462000281565b62000262565b905082815260208101848484011115620003195762000318620001e7565b5b62000326848285620002b7565b509392505050565b600082601f830112620003465762000345620001e2565b5b815162000358848260208601620002e3565b91505092915050565b600080604083850312156200037b576200037a620001d8565b5b600083015167ffffffffffffffff8111156200039c576200039b620001dd565b5b620003aa858286016200032e565b925050602083015167ffffffffffffffff811115620003ce57620003cd620001dd565b5b620003dc858286016200032e565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200043957607f821691505b6020821081036200044f576200044e620003f1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004b97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200047a565b620004c586836200047a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005126200050c6200050684620004dd565b620004e7565b620004dd565b9050919050565b6000819050919050565b6200052e83620004f1565b620005466200053d8262000519565b84845462000487565b825550505050565b600090565b6200055d6200054e565b6200056a81848462000523565b505050565b5b8181101562000592576200058660008262000553565b60018101905062000570565b5050565b601f821115620005e157620005ab8162000455565b620005b6846200046a565b81016020851015620005c6578190505b620005de620005d5856200046a565b8301826200056f565b50505b505050565b600082821c905092915050565b60006200060660001984600802620005e6565b1980831691505092915050565b6000620006218383620005f3565b9150826002028217905092915050565b6200063c82620003e6565b67ffffffffffffffff811115620006585762000657620001fd565b5b62000664825462000420565b6200067182828562000596565b600060209050601f831160018114620006a9576000841562000694578287015190505b620006a0858262000613565b86555062000710565b601f198416620006b98662000455565b60005b82811015620006e357848901518255600182019150602085019450602081019050620006bc565b86831015620007035784890151620006ff601f891682620005f3565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000761601f8362000718565b91506200076e8262000729565b602082019050919050565b60006020820190508181036000830152620007948162000752565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007d782620004dd565b9150620007e483620004dd565b9250828201905080821115620007ff57620007fe6200079b565b5b92915050565b6200081081620004dd565b82525050565b60006020820190506200082d600083018462000805565b92915050565b610f6280620008436000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906109c1565b60405180910390f35b6100d060048036038101906100cb9190610a7c565b61028e565b6040516100dd9190610ad7565b60405180910390f35b6100ee6103ee565b6040516100fb9190610b01565b60405180910390f35b61011e60048036038101906101199190610b1c565b6103f4565b60405161012b9190610ad7565b60405180910390f35b61013c61063b565b6040516101499190610b8b565b60405180910390f35b61016c60048036038101906101679190610ba6565b610644565b6040516101799190610b01565b60405180910390f35b61018a61065c565b60405161019791906109c1565b60405180910390f35b6101ba60048036038101906101b59190610a7c565b6106ea565b6040516101c79190610ad7565b60405180910390f35b6101ea60048036038101906101e59190610bd3565b6106ff565b6040516101f79190610b01565b60405180910390f35b6001805461020d90610c42565b80601f016020809104026020016040519081016040528092919081815260200182805461023990610c42565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f590610ce5565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103dc9190610b01565b60405180910390a36001905092915050565b60005481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610d77565b60405180910390fd5b82816104c59190610dc6565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161061e9190610b01565b60405180910390a3610631858585610724565b9150509392505050565b60006012905090565b60036020528060005260406000206000915090505481565b6002805461066990610c42565b80601f016020809104026020016040519081016040528092919081815260200182805461069590610c42565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b505050505081565b60006106f7338484610724565b905092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078b90610e6c565b60405180910390fd5b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081290610ed8565b60405180910390fd5b82816108279190610dc6565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108b99190610ef8565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161091d9190610b01565b60405180910390a360019150509392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561096b578082015181840152602081019050610950565b60008484015250505050565b6000601f19601f8301169050919050565b600061099382610931565b61099d818561093c565b93506109ad81856020860161094d565b6109b681610977565b840191505092915050565b600060208201905081810360008301526109db8184610988565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a13826109e8565b9050919050565b610a2381610a08565b8114610a2e57600080fd5b50565b600081359050610a4081610a1a565b92915050565b6000819050919050565b610a5981610a46565b8114610a6457600080fd5b50565b600081359050610a7681610a50565b92915050565b60008060408385031215610a9357610a926109e3565b5b6000610aa185828601610a31565b9250506020610ab285828601610a67565b9150509250929050565b60008115159050919050565b610ad181610abc565b82525050565b6000602082019050610aec6000830184610ac8565b92915050565b610afb81610a46565b82525050565b6000602082019050610b166000830184610af2565b92915050565b600080600060608486031215610b3557610b346109e3565b5b6000610b4386828701610a31565b9350506020610b5486828701610a31565b9250506040610b6586828701610a67565b9150509250925092565b600060ff82169050919050565b610b8581610b6f565b82525050565b6000602082019050610ba06000830184610b7c565b92915050565b600060208284031215610bbc57610bbb6109e3565b5b6000610bca84828501610a31565b91505092915050565b60008060408385031215610bea57610be96109e3565b5b6000610bf885828601610a31565b9250506020610c0985828601610a31565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c5a57607f821691505b602082108103610c6d57610c6c610c13565b5b50919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610ccf60228361093c565b9150610cda82610c73565b604082019050919050565b60006020820190508181036000830152610cfe81610cc2565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000610d6160288361093c565b9150610d6c82610d05565b604082019050919050565b60006020820190508181036000830152610d9081610d54565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd182610a46565b9150610ddc83610a46565b9250828203905081811115610df457610df3610d97565b5b92915050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000610e5660238361093c565b9150610e6182610dfa565b604082019050919050565b60006020820190508181036000830152610e8581610e49565b9050919050565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b6000610ec260118361093c565b9150610ecd82610e8c565b602082019050919050565b60006020820190508181036000830152610ef181610eb5565b9050919050565b6000610f0382610a46565b9150610f0e83610a46565b9250828201905080821115610f2657610f25610d97565b5b9291505056fea2646970667358221220b7fe9afc97f97df06a24f4aed755f20660de23decdb568bc0d494ba15d816f4064736f6c63430008120033";

type ERCtwentyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERCtwentyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERCtwenty__factory extends ContractFactory {
  constructor(...args: ERCtwentyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERCtwenty> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<ERCtwenty>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERCtwenty {
    return super.attach(address) as ERCtwenty;
  }
  override connect(signer: Signer): ERCtwenty__factory {
    return super.connect(signer) as ERCtwenty__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERCtwentyInterface {
    return new utils.Interface(_abi) as ERCtwentyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERCtwenty {
    return new Contract(address, _abi, signerOrProvider) as ERCtwenty;
  }
}
